---
# vim:ft=ansible:

 - assert: { that: "ansible_system_vendor == 'HP'" }

   # We look for:
   # 01:00.0 "System peripheral" "Hewlett-Packard Company" "Integrated Lights-Out Standard Slave Instrumentation & System Support" -r05 "Hewlett-Packard Company" "iLO4"
 - name: Checking for ILO device
   command: lspci -s 01:00.0 -m
   register: ilo_info
   changed_when: False
   check_mode: no

   # We need to get the "iLO4" from the above into a varible
   # using the python split fuction on the '"' character and the 2nd from last
   # element of the resulting array. "|lower" is a Jinja2 filter
 - name: Getting ilo version
   set_fact: ilo_version={{ ilo_info.stdout.split('\"')[-2] |lower}}

 - assert: { that: ilo_version | match("ilo4") }

 - name: Identifying firmware for ILO
   shell: "yum search {{ ilo_version }} |grep -i firmware"
   register: ilo_fw_rpm
   changed_when: False
   ignore_errors: True
   check_mode: no

 - name: annoying set_fact hack for ilo_fw_rpm_package
   set_fact: ilo_fw_rpm_package=" {{ ilo_fw_rpm.stdout.split(':')[0] }}"
   when: ilo_fw_rpm.rc == 0

 - name: Installing firmware RPM
   yum: name={{ ilo_fw_rpm_package }}  state=latest
   when: ilo_fw_rpm.rc == 0

 - name: extract path for hpsetup command
   shell: "rpm -ql {{ ilo_fw_rpm_package }}|grep /hpsetup"
   register: FirmwarePackage
   changed_when: False
   check_mode: no
   when: ilo_fw_rpm.rc == 0

 - name: annoying set_fact firmware_installer path from FirmwarePackage
   set_fact: firmware_installer="{{ FirmwarePackage.stdout | splitext | first }}"
   when: ilo_fw_rpm.rc == 0


 - include: firmware_installer.yml
   when: ilo_fw_rpm.rc == 0

 - name: Firmware RPM cleanup
   yum: name={{ ilo_fw_rpm_package }} state=absent
   when: ilo_fw_rpm.rc == 0
